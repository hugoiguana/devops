events {
}

http {

  proxy_send_timeout        120;
  proxy_read_timeout        300;
  proxy_buffering           off;
  keepalive_timeout         5 5;
  tcp_nodelay               on;

  ssl                       on;

  # Inbound private Certificate: Config certificate, certificate Key and certificatee CA.
  ssl_certificate           /etc/nginx/external/customerx.crt;
  ssl_certificate_key       /etc/nginx/external/customerx.pem;
  ssl_client_certificate  /etc/nginx/external/customerxCA.pem;
  ssl_verify_client on;

  client_max_body_size      0; 

  upstream httpapi {
    server nginx-customer-y:446;
  }  

  server {
      listen 445 default_server;
      server_name _;

      location / {
        return 200 'Customer-X works fine! :)';
      }

      location /call-customery {
        proxy_pass      https://httpapi$uri$is_args$args;
        proxy_set_header        X-Forwarded-Host $host;
        proxy_set_header        X-Forwarded-Server $host;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;

        # Outbound private Certificate: Configure to pass the private certificate to the other service.
        proxy_ssl_server_name   on;
        proxy_set_header Host   customer-y;
        proxy_ssl_name          customer-y;
        proxy_ssl_certificate         /etc/nginx/external/customery.crt;
        proxy_ssl_certificate_key     /etc/nginx/external/customery.pem;
        proxy_ssl_trusted_certificate /etc/nginx/external/customeryCA.pem;
        proxy_ssl_protocols           TLSv1 TLSv1.1 TLSv1.2;      
        proxy_ssl_ciphers             HIGH:!aNULL:!MD5;
        proxy_ssl_verify        on;
        proxy_ssl_verify_depth  2;
        proxy_ssl_session_reuse on;
      }
  }  

  
}